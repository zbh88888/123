import pygame
import random

pygame.init()

# 游戏屏幕设置
screen = pygame.display.set_mode((400, 600))
pygame.display.set_caption("Flappy Bird")

# 鸟类
class Bird:
    def __init__(self):
        self.x = 50
        self.y = 250
        self.vel_y = 0
        self.width = 20
        self.height = 20

    def update(self):
        self.vel_y += 1
        self.y += self.vel_y

    def jump(self):
        self.vel_y = -10

    def draw(self):
        pygame.draw.rect(screen, (255, 255, 0), (self.x, self.y, self.width, self.height))

# 柱子类
class Pipe:
    def __init__(self, x):
        self.x = x
        self.width = 30
        self.top = random.randint(100, 300)
        self.bottom = self.top + 150

    def update(self):
        self.x -= 2

    def offscreen(self):
        if self.x < -self.width:
            return True
        else:
            return False

    def collision(self, bird):
        if bird.x + bird.width > self.x and bird.x < self.x + self.width:
            if bird.y < self.top or bird.y + bird.height > self.bottom:
                return True
        return False

    def draw(self):
        pygame.draw.rect(screen, (0, 255, 0), (self.x, 0, self.width, self.top))
        pygame.draw.rect(screen, (0, 255, 0), (self.x, self.bottom, self.width, 600 - self.bottom))

# 游戏主循环
def main():
    bird = Bird()
    pipes = [Pipe(400)]
    score = 0
    font = pygame.font.SysFont("Comic Sans MS", 30)

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                exit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_SPACE:
                    bird.jump()

        screen.fill((0, 0, 0))
        bird.update()
        bird.draw()

        if pipes[-1].x < 250:
            pipes.append(Pipe(400))

        for pipe in pipes:
            pipe.update()
            pipe.draw()
            if pipe.collision(bird):
                score = 0
                pipes = [Pipe(400)]
                bird = Bird()
                break
            if pipe.offscreen():
                pipes.remove(pipe)
                score += 1

        score_surface = font.render(f"Score: {score}", True, (255, 255, 255))
        screen.blit(score_surface, (10, 10))

        pygame.display.flip()
        pygame.time.Clock().tick(60)

if __name__ == "__main__":
    main()
